using Content.Shared.DocumentCopier;
using Content.Shared.Fax;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.DocumentCopier.UI;

[GenerateTypedNameReferences]
public sealed partial class DocumentCopierWindow : DefaultWindow
{
    public event Action? SourceDocumentButtonPressed;
    public event Action? TargetDocumentButtonPressed;
    public event Action? PrintButtonPressed;

    public DocumentCopierWindow()
    {
        RobustXamlLoader.Load(this);

        PrintButton.OnPressed += _ => PrintButtonPressed?.Invoke();
        SourceDocumentControl.OnPressed += _ => SourceDocumentButtonPressed?.Invoke();
        TargetDocumentControl.OnPressed += _ => TargetDocumentButtonPressed?.Invoke();
    }

    public void UpdateState(DocumentCopierUiState state)
    {
        var isDocumentInserted = true;

        SetButtonText(SourceDocumentControl, state.IsSourceDocumentInserted);
        SetButtonText(TargetDocumentControl, state.IsTargetDocumentInserted);

        PrintButton.Disabled = !isDocumentInserted;

        void SetButtonText(Button target, bool buttonState)
        {
            if (buttonState)
            {
                target.Text = "Eject";
            }
            else
            {
                SourceDocumentControl.Text = "Insert";
                isDocumentInserted = false;
            }
        }
    }
}
