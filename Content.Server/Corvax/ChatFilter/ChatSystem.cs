using System.Linq;
using System.Text.RegularExpressions;

namespace Content.Server.Chat.Systems;

public sealed partial class ChatSystem
{
    private static readonly Dictionary<string, string> SlangReplace = new()
    {
        // Game
        { "хос", "гсб" },
        { "хоса", "гсб" },
        { "смо", "" },
        { "гв", "" },
        { "се", "си" },
        { "хоп", "гп" },
        { "хопа", "гп" },
        { "рд", "" },
        { "нр", "" },
        { "вард", "" },
        { "варден", "смотритель" },
        { "вардена", "смотрителя" },
        { "геник", "" },
        { "кк", "" },
        { "ск", "" },
        { "зк", "" },
        { "пда", "кпк" },
        { "дэк", "детектив" },
        { "дэку", "детективу" },
        { "дэка", "детектива" },
        { "дек", "детектив" },
        { "деку", "детективу" },
        { "дека", "детектива" },
        { "мш", "" },
        { "трейтор", "" },
        { "инж", "инженер" },
        { "инжи", "инженеры" },
        { "инжы", "инженеры" },
        { "инжу", "инженеру" },
        { "инжам", "инженерам" },
        { "инжинер", "инженер" },
        { "яо", "" }, // braindead
        { "нюк", "" },
        { "нюкеры", "ядерные оперативники" },
        { "нюкер", "ядерный оперативник" },
        { "нюкеровец", "ядерный оперативник" },
        { "нюкеров", "ядерных оперативников" },
        { "аирлок", "шлюз" },
        { "аирлоки", "шлюзы" },
        { "айрлок", "шлюз" },
        { "айрлоки", "шлюзы" },
        { "визард", "волшебник" },
        { "дизарм", "" },
        { "синга", "сингулярность" },
        { "сингу", "сингулярность" },
        { "синги", "сингулярности" },
        { "разгерм", "разгерметизация" },
        { "бикардин", "бикаридин" },
        { "бика", "бикаридин" },
        { "бику", "бикаридин" },
        { "декса", "дексалин" },
        { "дексу", "дексалин" },
        // IC
        { "норм", "нормально" },
        { "хз", "не знаю" },
        { "синд", "синдикат" },
        { "пон", "понятно" },
        { "непон", "не понятно" },
        { "нипон", "не понятно" },
        { "кста", "кстати" },
        { "кст", "" },
        { "плз", "" },
        { "пж", "" },
        { "спс", "" },
        { "сяб", "" },
        { "прив", "привет" },
        { "ок", "окей" },
        { "чел", "мужик" },
        { "лан", "" },
        { "збс", "" },
        { "мб", "" },
        { "оч", "" },
        { "омг", "" },
        { "нзч", "" },
        { "бб", "" },
        { "пох", "" },
        { "ясн", "" },
        { "всм", "всмысле" },
        { "чзх", "" },
        { "изи", "" },
        { "гг", "" },
        { "пруф", "" },
        { "пруфани", "" },
        { "пруфанул", "" },
        { "брух", "" },
        { "имба", "" },
        { "разлокать", "" },
        { "юзать", "" },
        { "юзай", "" },
        { "юзнул", "" },
        { "хилл", "" },
        { "подхиль", "" },
        { "хильни", "" },
        { "хелп", "" },
        { "хелпани", "" },
        { "хелпанул", "" },
        { "рофл", "" },
        { "рофлишь", "" },
        { "крч", "" },
        { "шатл", "шаттл" },
        // OOC
        { "афк", "ссд" },
        { "админ", "бог" },
        { "админы", "боги" },
        { "админов", "богов" },
        { "забанят", "покарают" },
        { "бан", "наказание" },
        { "пермач", "наказание" },
        { "перм", "наказание" },
        { "запермили", "наказание" },
        { "запермят", "накажут" },
        { "нонрп", "плохо" },
        { "нрп", "плохо" },
        { "рдм", "плохо" },
        { "дм", "плохо" },
        { "гриф", "плохо" },
        { "фрикил", "плохо" },
        { "фрикилл", "плохо" },
        { "лкм", "левая рука" },
        { "пкм", "правая рука" },
    };

    private string ReplaceWords(string message)
    {
        if (string.IsNullOrEmpty(message))
            return message;

        return Regex.Replace(message, "\\b(\\w+)\\b", match =>
        {
            bool isUpperCase = match.Value.All(Char.IsUpper);

            if (SlangReplace.TryGetValue(match.Value.ToLower(), out var replacement))
                return isUpperCase ? replacement.ToUpper() : replacement;
            return match.Value;
        });
    }
}
